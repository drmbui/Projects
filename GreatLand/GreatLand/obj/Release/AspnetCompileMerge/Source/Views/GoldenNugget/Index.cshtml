@model List<GreatLand.Models.Routes>
@using GridMvc.Html
@{
    ViewBag.Title = "GreatLand - Reservation";
}

<h2>L'Auberge Casino Resort</h2>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Office</title>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.10.2.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>



    <script type="text/javascript">

    $(document).ready(function () {

        //Dropdownlist Selectedchange event

        $("#Country").change(function () {

            $("#State").empty();

            $.ajax({

                type: 'POST',

                url: '@Url.Action("GetStates")', // we are calling json method



                dataType: 'json',



                data: { id: $("#Country").val() },

               // here we are get value of selected country and passing same value  as inputto json method GetStates.



                success: function (states) {

                    // states contains the JSON formatted list

                    // of states passed from the controller



                    $.each(states, function (i, state) {

                    $("#State").append('<option value="' + state.Value + '">' +

                         state.Text + '</option>');

                    // here we are adding option for States



                    });

                },

                error: function (ex) {

                    alert('Failed to retrieve states.' + ex);

                }

            });

            return false;

        })

    });

    </script>

    <script type="text/javascript">

    $(document).ready(function () {

        //Dropdownlist Selectedchange event

        $("#State").change(function () {

            $("#city").empty();

            $.ajax({

                type: 'POST',

                url: '@Url.Action("GetCity")',

                dataType: 'json',

                data: { id: $("#State").val() },

                success: function (citys) {

                    // states contains the JSON formatted list

                    // of states passed from the controller

                    $.each(citys, function (i, city) {

                        $("#city").append('<option value="'

+ city.Value + '">'

+ city.Text + '</option>');

                    });

                },

                error: function (ex) {

                    alert('Failed to retrieve states.' + ex);

                }

            });

            return false;

        })

    });

    </script> 
</head>
<body>

    @using (Html.BeginForm())
    {
        @Html.DropDownList("Country",ViewData["country"] as List<SelectListItem>)

        @Html.DropDownList("State", new SelectList(string.Empty,"Value","Text"), "Please select a Pickup location", new  { style = "width:250px",@class = "dropdown1"})
        @*@Html.DropDownList("city", new SelectList(string.Empty,"Value","Text"),"Plesae select a city", new { style = "width:250px", @class="dropdown1"})*@
    }


    <table>
        <tr><td> <div style="font-family:Verdana; font-size:small; font-weight:bold; text-align:left">LOCATION DETAILS </div> </td></tr>
        <tr><td><div style="font-family:Verdana; font-size:medium; text-align:left">@TempData["Courses"]</div></td></tr>
    </table>
    <br />
    <br />
    <div style="width:100%">
        @Html.Grid(Model).Columns(columns =>
   {
       //columns.Add(c => c.Route).Titled("Route");
       columns.Add(c => c.Day).Titled("Day").Filterable(true);
       columns.Add(c => c.Depart).Titled("Depart");
       columns.Add(c => c.ArriveCasino).Titled("Arrive Casino");
       columns.Add(c => c.DepartCasino).Titled("Depart Casino");
       columns.Add(c => c.ReturnTime).Titled("Return Time");
       columns.Add(c => c.YouPay).Titled("You Pay");
       columns.Add(c => c.YouReceive).Titled("You Receive");
       columns.Add(model => model.Route).Titled("RESERVE").Filterable(true).Sanitized(false).Encoded(false).RenderValueAs(model => Html.ActionLink("Reservation", "Create", "Lauberge", new { id = model.Route }, null).ToHtmlString());
    

   }).WithPaging(15).Sortable(true)
    </div>
    <br />
    <br />
    <br />
    <div>Policies</div>
    <div style="font-size:smaller;font-family:Verdana">
     
        RESERVATION HOURS: 8:30AM - 10:00PM, MONDAY TO SUNDAY
        Weekend trips schedule may be 30 minutes late due to road construction, traffic and weather.

        Reservations must be made a day before for DAY TRIPS and by 5:00PM for NIGHT TRIPS.
        Office reservations will be automatic cancelled 15 minutes prior to departure time.
        Seating arrangements are at check-in on a first come, first serve basis.
        One person per ticket and is per one seating arrangement ONLY.
        All tickets are non-refundable, non-exchangeable, and non-transferable once the bus departs.
        All passengers must be 21 years or older with a valid Federal Picture I.D. No copy accepted.
        No luggage permitted, unless arranged with office in advance with your casino hotel reservation.
        We assume no liability for damage to the bag, nor for loss or damage to the contents of the bag.

        Additional Fee may apply without casino card of destination. We reserve the right to alter or cancel without notice.
        THE BUS COMPANY AND THE CASINOS ARE NOT RESPONSIBLE FOR GUESTS WHO MISS THEIR SCHEDULED DEPARTURE. PASSENGERS ARE RESPONSIBLE FOR RIDING THE CORRECT BUS FOR THEIR INTENDED DESTINATION AND EXITING THE BUS AT THE CORRECT STOP.
        TRANSPORTATION SERVICES ARE PROVIDED FOR GAMING CUSTOMERS ONLY. THIS BUS SERVICE IS NOT FOR GENERAL PUBLIC TRANSPORTATION.
    </div>

   

    



</body>
</html>

